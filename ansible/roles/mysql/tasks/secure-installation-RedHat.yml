---
- name: Get list of hosts for the root user.
  shell: echo "mysql -NBe 'SELECT Host FROM mysql.user WHERE User = \"root\" ORDER BY (Host=\"localhost\") ASC'" | scl enable rh-mysql56 -  
  register: mysql_root_hosts
  changed_when: false
  when: mysql_install_packages | bool or mysql_root_password_update

- name: Set hosts if not defined previously
  set_fact:
    mysql_root_hosts: 
      stdout_lines: []
  when: mysql_root_hosts.skipped is defined and mysql_root_hosts.skipped == true

# Note: We do not use mysql_user for this operation, as it doesn't always update
# the root password correctly. See: https://goo.gl/MSOejW
- name: Update MySQL root password for localhost root account.
  shell: echo "mysql --user={{ mysql_root_username }} -NBe 'update mysql.user set password=PASSWORD(\"{{ mysql_root_password }}\") where user=\"{{ mysql_root_username }}\" and host=\"{{ item }}\"; flush privileges;'" | scl enable rh-mysql56 -  
  with_items: "{{mysql_root_hosts.stdout_lines}}"
  when: mysql_install_packages | bool or mysql_root_password_update

- name: Get list of hosts for the anonymous user.
  shell: echo "mysql --user={{ mysql_root_username }} --password={{mysql_root_password}}  -NBe 'SELECT Host FROM mysql.user WHERE User = \"\"'" | scl enable rh-mysql56 -  
  register: mysql_anonymous_hosts
  changed_when: false

- name: Remove anonymous MySQL users.
  mysql_user:
     name: ""
     host: "{{ item }}"
     state: absent
     login_user: "{{ mysql_root_username }}" 
     login_password: "{{ mysql_root_password }}"
  with_items: "{{mysql_anonymous_hosts.stdout_lines}}"

- name: Remove MySQL test database.
  mysql_db: "name='test' state=absent login_user={{ mysql_root_username }} login_password={{ mysql_root_password }}"