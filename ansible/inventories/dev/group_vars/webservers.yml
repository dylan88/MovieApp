---
# The web server software to use. Can be either 'apache' or 'nginx'.
debianvm_webserver: apache
php_webserver_daemon: "{{ debianvm_webserver }}"

# Cron jobs are added to the root user's crontab. Keys include name (required),
# minute, hour, day, weekday, month, job (required), and state.

website_domain: formation.symfo.local
website_path: /var/www/formation_symfo
website_database_name: formation
website_database_user: formation
website_database_password: formation

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts:
  - name: symfony.conf
    port: 443
    servername: "{{ website_domain }}"
    documentroot: "{{ website_path }}/web"
    extra_parameters: |
      ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ website_path }}/web"
      ErrorLog "/var/log/apache2/vitrine_error.log"
      CustomLog "/var/log/apache2/vitrine_access.log" combined
      
      SSLEngine on
      SSLCertificateFile /etc/apache2/ssl/micropole.crt
      SSLCertificateKeyFile /etc/apache2/ssl/micropole.key

apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - ssl.load
  - rewrite.load
  - proxy.load
  - proxy_fcgi.load

apache_listen_port: 8080

ssl_directory_path: /etc/apache2/ssl

#nginx_vhost_template: "templates/nginx-vhost.conf.j2"

#nginx_vhost_template: "templates/nginx-vhost.conf.j2"

# MySQL Databases and users. If build_makefile: is true, first database will
# be used for the makefile-built site.
mysql_databases:
  - name: "{{ website_database_name }}"
    encoding: utf8
    collation: utf8_general_ci

mysql_users:
  - name: "{{ website_database_user }}"
    host: "%"
    password: "{{ website_database_password }}"
    priv: "{{ website_database_name }}.*:ALL"

mysql_backup_databases: []

mysql_backup_user: "{{ mysql_root_username}}"
mysql_backup_password: "{{ mysql_root_password}}"

mysql_backup_path: /opt/dumps

# Add any extra apt or yum packages you would like installed.
extra_packages:
  - vim

# PHP Configuration.
php_enable_php_fpm: true
php_version: "7.4"
php_fpm_daemon: "php7.4-fpm"
php_memory_limit: "1G"
php_opcache_enabled_in_ini: true
php_opcache_memory_consumption: "192"
php_opcache_max_accelerated_files: 4096
php_max_input_vars: "4000"
php_display_errors: "On"

php_packages:
  - php7.4
  - php7.4-mbstring
  - php7.4-json
  - php7.4-cli
  - php7.4-curl
  - php7.4-gd
  - php-pear
  - php7.4-mysql
  - php7.4-fpm
  - php7.4-xml
  - php7.4-zip
  - php7.4-intl

php_pear_channels:
  - pear.phing.info
php_pear_libraries:
  - phing/phing

# Drush configuration
drush_launcher_install: true
drush_launcher_version: "0.10.0"

composer_user: vagrant
composer_path: /usr/bin/composer
composer_home_path: '/home/vagrant/.composer'
# composer_global_packages:
#   - { name: phpunit/phpunit, release: '@stable' }

# MySQL Configuration.
mysql_root_password: root
mysql_slow_query_log_enabled: true
mysql_slow_query_time: 2
mysql_wait_timeout: 300

mysql_packages:
  - mariadb-client
  - mariadb-server
  - python3-mysqldb


php_xdebug_package: php7.4-xdebug
# XDebug configuration. XDebug is disabled by default for better performance.
php_xdebug_default_enable: 0
php_xdebug_coverage_enable: 0
php_xdebug_cli_enable: 0
php_xdebug_remote_enable: 1
php_xdebug_remote_connect_back: 0
php_xdebug_remote_host: 10.0.2.2
# Use PHPSTORM for PHPStorm, sublime.xdebug for Sublime Text.
php_xdebug_idekey: PHPSTORM
php_xdebug_max_nesting_level: 256
